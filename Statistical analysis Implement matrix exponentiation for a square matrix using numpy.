import numpy as np

def matrix_power(matrix, power):
    """
    Compute matrix exponentiation using fast exponentiation.
    
    Parameters:
        matrix (np.ndarray): A square matrix.
        power (int): The exponent (non-negative integer).
    
    Returns:
        np.ndarray: The resulting matrix after exponentiation.
    """
    if power < 0:
        raise ValueError("Power must be non-negative")
    
    # Identity matrix of same shape
    result = np.eye(matrix.shape[0], dtype=matrix.dtype)
    base = matrix.copy()
    
    while power > 0:
        if power % 2 == 1:
            result = result @ base
        base = base @ base
        power //= 2
    
    return result


# Example Usage
A = np.array([[1, 2],
              [3, 4]])

n = 5
print(f"A^{n} =\n", matrix_power(A, n))
